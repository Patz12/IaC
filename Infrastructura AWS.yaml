AWSTemplateFormatVersion: 2010-09-09

Description:  Este template crea una stack de un servidor web con autoscaling y un balanceador de carga. Tambien incluye la infraestructura de redes necesaria para ello, como una VPC NAT gateways, entre otros.

Parameters:
  NombreStack:
    Description: El nombre asignado a los recursos para identificarlos facilmente. 
    Type: String
    Default: 'Misaby'

  VpcCIDR:
    Description: Rango de IPs (CIDR) para la VPC
    Type: String
    Default: 150.10.0.0/16

  RedPublica1CIDR:
    Description: Rango de IPs (CIDR) para la subred publica en la primer AZ.
    Type: String
    Default: 150.10.0.0/28

  RedPublica2CIDR:
    Description: Rango de IPs (CIDR) para la subred publica en la segunda AZ.
    Type: String
    Default: 150.10.0.16/28

  RedWeb1CIDR:
    Description: Rango de IPs (CIDR) para la subred privada en la primer AZ.
    Type: String
    Default: 150.10.0.32/28

  RedWeb2CIDR:
    Description: Rango de IPs (CIDR) para la subred privada en la segunda AZ.
    Type: String
    Default: 150.10.0.48/28

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: name
        Value: !Sub ${NombreStack} VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} InternetGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
 
  RedPublica1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC                                       # Required
      AvailabilityZone: !Select [ 0, !GetAZs '' ]           # Obtiene la primer AZ de la cuenta
      CidrBlock: !Ref RedPublica1CIDR                       # Required
      MapPublicIpOnLaunch: true                             # Red publica
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Red Publica (AZ1)

  RedPublica2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC                                       # Required
      AvailabilityZone: !Select [ 1, !GetAZs '' ]           # Obtiene la segunda AZ de la cuenta
      CidrBlock: !Ref RedPublica2CIDR                       # Required
      MapPublicIpOnLaunch: true                             # Red publica
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Red Publica (AZ2)

  RedWeb1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]          # Obtiene la primer AZ de la cuenta
      CidrBlock: !Ref RedWeb1CIDR                           # Required
      MapPublicIpOnLaunch: false                            # Red Privada
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Red Web (AZ1)

  RedWeb2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]          # Obtiene la segunda AZ de la cuenta
      CidrBlock: !Ref RedWeb2CIDR                           # Required
      MapPublicIpOnLaunch: false                            # Red Privada
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Red Web (AZ2)

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref RedPublica1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref RedPublica2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Rutas Publicas

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref RedPublica1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref RedPublica2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Rutas Privadas (AZ1)

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref RedWeb1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${NombreStack} Rutas Privadas (AZ2)

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref RedWeb2

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: Referencia de la VPC creada
    Value: !Ref VPC

  PublicSubnets:
    Description: Lista de redes publicas
    Value: !Join [ ",", [ !Ref RedPublica1, !Ref RedPublica2 ]]

  PrivateSubnets:
    Description: Lista de redes privadas
    Value: !Join [ ",", [ !Ref RedWeb1, !Ref RedWeb2 ]]

  PublicSubnet1:
    Description: Referencia de la subred publica en la primer AZ
    Value: !Ref RedPublica1

  PublicSubnet2:
    Description: Referencia de la subred publica en la segunda AZ
    Value: !Ref RedPublica2

  PrivateSubnet1:
    Description: Referencia de la subred privada en la primer AZ
    Value: !Ref RedWeb1

  PrivateSubnet2:
    Description: Referencia de la subred privada en la segunda AZ
    Value: !Ref RedWeb2

  NoIngressSecurityGroup:
    Description: Security group sin reglas de ingreso
    Value: !Ref NoIngressSecurityGroup